<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Educator Management</title>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <style>
      body {
        background-color: #f3f4f6;
      }
      .sidebar {
        width: 250px;
        background-color: #2c5e4f;
        color: white;
        padding: 20px;
      }
      .sidebar .logo {
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 2rem;
      }
      .sidebar ul {
        list-style-type: none;
        padding: 0;
      }
      .sidebar ul li {
        margin-bottom: 1rem;
      }
      .sidebar ul li a {
        display: block;
        color: white;
        padding: 10px 15px;
        border-radius: 0.375rem;
        text-decoration: none;
        transition: background-color 0.3s;
      }
      .sidebar ul li a:hover,
      .sidebar ul li a.active {
        background-color: #2c5e4f;
      }
      .main-content {
        padding: 2rem;
        flex: 1;
      }
      .form-container,
      .educators-table {
        background-color: #ffffff;
        padding: 1.5rem;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-top: 2rem;
      }
      .form-container h2 {
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 1rem;
        color: #2c5e4f;
      }
      .form-group {
        margin-bottom: 1rem;
      }
      label {
        display: block;
        margin-bottom: 0.5rem;
        color: #374151;
      }
      input,
      select {
        width: 100%;
        padding: 0.5rem;
        border: 1px solid #d1d5db;
        border-radius: 0.375rem;
        background-color: #f9fafb;
      }
      button {
        background-color: #89bb91;
        color: white;
        padding: 0.75rem 1.5rem;
        border: none;
        border-radius: 0.375rem;
        cursor: pointer;
        transition: background-color 0.3s;
      }
      button:hover {
        background-color: #89bb91;
      }
      table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 1rem;
      }
      th,
      td {
        border: 1px solid #e5e7eb;
        padding: 0.75rem;
        text-align: left;
      }
      th {
        background-color: #f3f4f6;
      }
      .delete-btn {
        background-color: #ef4444;
        padding: 0.5rem 1rem;
      }
      .delete-btn:hover {
        background-color: #b91c1c;
      }
    </style>
  </head>
  <body>
    <div class="dashboard-container flex min-h-screen">
      <nav class="sidebar">
        <div class="logo">Admin Panel</div>
        <ul>
          <li><a href="/admin/dashboard">Dashboard</a></li>
          <li><a href="/admin/students">Students</a></li>
          <li><a href="/admin/educators" class="active">Educators</a></li>
          <li><a href="/admin/programs">Programs</a></li>
          <li><a href="/logout">Logout</a></li>
        </ul>
      </nav>

      <main class="main-content">
        <h1 class="text-3xl font-bold text-gray-800">Educator Management</h1>

        <!-- Toggle Button for Add Educator Form -->
        <button
          id="toggleFormBtn"
          class="mt-8 mb-4 bg-green-600 text-white px-4 py-2 rounded"
        >
          Add Educator
        </button>

        <!-- Add Educator Form -->
        <div
          id="formContainer"
          class="form-container hidden max-h-96 overflow-y-auto"
        >
          <h2>Add New Educator</h2>
          <form action="/admin/educators/add" method="POST" id="educatorForm">
            <div class="form-group">
              <label for="educatorId">Educator ID:</label>
              <input type="text" id="educatorId" name="educatorId" required />
            </div>

            <div class="form-group">
              <label for="name">Name:</label>
              <input type="text" id="name" name="name" required />
            </div>

            <div class="form-group">
              <label for="experienceYears">Years of Experience:</label>
              <input
                type="number"
                id="experienceYears"
                name="experienceYears"
                min="0"
                required
              />
            </div>

            <div class="form-group">
              <label for="email">Email:</label>
              <input type="email" id="email" name="email" required />
            </div>

            <div class="form-group">
              <label for="phoneNo">Phone Number:</label>
              <input type="tel" id="phoneNo" name="phoneNo" required />
            </div>

            <div class="form-group">
              <label>Programs:</label>
              <div class="checkbox-group">
                <% programs.forEach(program => { %>
                <label class="inline-flex items-center mr-4 mb-2">
                  <input
                    type="checkbox"
                    name="programs"
                    value="<%= program._id %>"
                    class="form-checkbox"
                  />
                  <span class="ml-2"><%= program.programName %></span>
                </label>
                <% }) %>
              </div>
            </div>

            <button type="submit">Add Educator</button>
          </form>
        </div>
        <!-- Educator List with Search and Filter -->
        <div class="educators-table">
          <div class="flex mb-4">
            <input
              type="text"
              id="searchInput"
              placeholder="Search educators by name or ID"
              class="w-full p-2 border border-gray-300 rounded mr-2"
            />
            <select
              id="filterProgram"
              class="w-1/3 p-2 border border-gray-300 rounded"
            >
              <option value="">All Programs</option>
              <% programs.forEach(program => { %>
              <option value="<%= program._id %>">
                <%= program.programName %>
              </option>
              <% }) %>
            </select>
          </div>

          <table>
            <thead>
              <tr>
                <th>Educator ID</th>
                <th>Name</th>
                <th>Experience</th>
                <th>Programs</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody id="educatorsTableBody">
              <% educators.forEach(educator => { %>
              <tr>
                <td><%= educator.educatorId %></td>
                <td><%= educator.name %></td>
                <td><%= educator.experienceYears %> years</td>
                <td>
                  <%= educator.programs.map(p => p.programName).join(', ') %>
                </td>
                <td>
                  <div class="flex space-x-2">
                    <a href="/admin/educators/<%= educator._id %>">
                      <button class="bg-green-600 text-white px-4 py-2 rounded">
                        View
                      </button>
                    </a>

                    <a href="/admin/educators/edit/<%= educator._id %>">
                      <button
                        class="bg-yellow-500 text-white px-4 py-2 rounded"
                      >
                        Edit
                      </button>
                    </a>

                    <form
                      onsubmit="deleteEducator(event, '<%= educator._id %>')"
                    >
                      <button
                        type="submit"
                        class="bg-red-500 text-white px-4 py-2 rounded"
                      >
                        Delete
                      </button>
                    </form>
                  </div>
                </td>
              </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </main>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        async function deleteEducator(event, educatorId) {
          event.preventDefault(); // Prevent default form submission

          const confirmDelete = confirm(
            "Are you sure you want to delete this educator?"
          );
          if (!confirmDelete) return;

          const response = await fetch(
            `/admin/educators/delete/${educatorId}`,
            {
              method: "DELETE",
            }
          );

          if (response.ok) {
            alert("Educator deleted successfully!");
            location.reload(); // Refresh the page
          } else {
            alert("Error deleting educator.");
          }
        }

        // Add event listeners
        const deleteButtons = document.querySelectorAll("form[onsubmit]");
        deleteButtons.forEach((form) => {
          form.addEventListener("submit", (event) => {
            const educatorId = form
              .querySelector('button[type="submit"]')
              .closest("form")
              .getAttribute("data-educator-id");
            deleteEducator(event, educatorId);
          });
        });

        // Toggle form visibility
        document
          .getElementById("toggleFormBtn")
          .addEventListener("click", function () {
            document.getElementById("formContainer").classList.toggle("hidden");
          });

        // Search functionality
        document
          .getElementById("searchInput")
          .addEventListener("input", function () {
            const filter = this.value.toLowerCase();
            document
              .querySelectorAll("#educatorsTableBody tr")
              .forEach((row) => {
                const educatorId = row
                  .querySelector("td:nth-child(1)")
                  .textContent.toLowerCase();
                const educatorName = row
                  .querySelector("td:nth-child(2)")
                  .textContent.toLowerCase();
                row.style.display =
                  educatorId.includes(filter) || educatorName.includes(filter)
                    ? ""
                    : "none";
              });
          });

        // Program filter functionality
        document
          .getElementById("filterProgram")
          .addEventListener("change", function () {
            const selectedProgram = this.value;
            const selectedProgramText = this.options[this.selectedIndex].text;

            document
              .querySelectorAll("#educatorsTableBody tr")
              .forEach((row) => {
                const programsCell = row.querySelector("td:nth-child(4)");
                row.style.display =
                  selectedProgram === "" ||
                  programsCell.textContent.includes(selectedProgramText)
                    ? ""
                    : "none";
              });
          });
      });
    </script>
  </body>
</html>
